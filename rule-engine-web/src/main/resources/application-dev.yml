logging:
  config: classpath:logback-spring.xml
  path: logs
  file:
    #日志文档保留天数
    max-history: 1
  level.root: info

server:
  port: 8010
  tomcat:
    max-threads: 40 #最大线程执行数
    max-connections: 400 #最大连接数
    uri-encoding: UTF-8
spring:
  jackson:
    time-zone: Asia/Shanghai
    #date-format: yyyy-MM-dd HH:mm:ss
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      name: master
      url:
      username:
      password:
      driver-class-name: com.mysql.jdbc.Driver
      # 初始化大小，最小，最大
      initialSize: 20
      minIdle: 30
      maxActive: 100
      # 配置获取连接等待超时的时间
      maxWait: 10000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 30000
      validationQuery: select 1 from dual #检验连接是否有效的查询语句
      testWhileIdle: true #设置从连接池获取连接时是否检查连接有效性，true时，如果连接空闲时间超过minEvictableIdleTimeMillis进行检查，否则不检查;false时，不检查
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      useGlobalDataSourceStat: true
      # druid监控账号密码
      stat-view-servlet:
        login-username: admin
        login-password: 123456
  #消息队列配置
  rabbitmq:
    host:
    port:
    username:
    password:
    listener:
      simple:
        retry:
          max-attempts: 2 #重试次数
          enabled: true #启用重试
          initial-interval: 3000 #重试间隔时间（单位毫秒）
        default-requeue-rejected: false #重试次数超过上面的设置之后是否丢弃（false不丢弃时需要写相应代码将该消息加入死信队列）
  #邮箱
  mail:
    host: smtp.qq.com
    username:
    password:
    port: 465
    protocol: smtp
    properties.mail.smtp.auth: true
    properties.mail.smtp.ssl.enable: true

  #redis配置
  redis:
    database: 2
    host:
    password:
    port: 6000
    lettuce:
      pool:
        max-active: 2000
        min-idle: 30
    timeout: 10000

  # 线程池配置
  task:
    execution:
      pool:
        core-size: 24
        max-size: 100

#mybatis-plus配置
mybatis-plus:
  mapper-locations: classpath:/mapper/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.engine.web.store.entity
  global-config:
    # 数据库相关配置
    db-config:
      #主键类型  AUTO:"数据库ID自增", INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: AUTO
      #字段策略 IGNORED:"忽略判断",NOT_NULL:"非 NULL 判断"),NOT_EMPTY:"非空判断"
      field-strategy: not_empty
      #逻辑删除配置
      logic-delete-value: 1
      logic-not-delete-value: 0
      db-type: mysql
      #表驼峰转下划线
      table-underline: true
    #缓存 Sql 解析初始化
    sql-parser-cache: true
  # 原生配置
  configuration:
    #驼峰转下划线
    map-underscore-to-camel-case: true
    cache-enabled: false
    log-impl: com.engine.web.config.SqlOutConfig

#出现异常是否发送邮件提醒
exception:
  message:
    enable: false
    recipient:
      serious:
      runRule:
      other:

#配置文件加密ENC()
jasypt:
  encryptor:
    password: test

#是否需要验证权限
auth:
  enable: true
  jwt:
    secretKey: rule
    #token失效时间(毫秒单位)
    keepTime: 1800000

#阿里巴巴oss
aliyun:
  oss:
    endPoint:
    accessKeyId:
    accessKeySecret:
    bucketName:
    defaultFolder: ruleengine